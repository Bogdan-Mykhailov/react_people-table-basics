{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","types/ErrorType.ts","types/Path.ts","components/Navbar/Navbar.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/ErrorNotification/ErrorNotification.tsx","components/UserLink/UserLink.tsx","components/Person/Person.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","Routes/MainRoutes.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","cn","ErrorType","PATH","Navbar","role","Main","People","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorNotification","onError","onChangeError","useEffect","None","UserLink","path","sex","Person","person","mom","dad","slug","name","born","died","motherName","fatherName","useParams","isSelected","classNames","PeopleTable","people","findParent","data","parentName","find","map","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","fetchPeoples","getPeopleList","WentWrong","length","NotFoundPage","MainRoutes","element","Home","replace","index","USER_ID","Error","App","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1a01eb0d.chunk.js","sourcesContent":["import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface PageNavLinkProps {\n  to: string;\n  title: string\n}\n\nexport const PageNavLink: FC<PageNavLinkProps> = ({\n  to,\n  title,\n}) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => cn('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      })}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","export enum ErrorType {\n  None = '',\n  WentWrong = 'Something went wrong',\n}\n","export enum PATH {\n  Main = '/',\n  Home = '/home',\n  People = '/people',\n  Error = '/*',\n  USER_ID = ':slug',\n}\n","import { FC } from 'react';\nimport { PageNavLink } from '../PageNavLink';\nimport { PATH } from '../../types';\n\nexport const Navbar: FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to={PATH.Main} title=\"Home\" />\n          <PageNavLink to={PATH.People} title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { FC } from 'react';\n\nexport const HomePage: FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { PersonType } from './types';\n\nconst API_URL\n  = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<PersonType[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { FC, useEffect } from 'react';\nimport { ErrorType } from '../../types';\n\ninterface ErrorProps {\n  onError: ErrorType;\n  onChangeError: (onError: ErrorType) => void;\n}\n\nexport const ErrorNotification: FC<ErrorProps> = ({\n  onError,\n  onChangeError,\n}) => {\n  useEffect(() => {\n    setTimeout(() => onChangeError(ErrorType.None), 4000);\n  }, [onError]);\n\n  return (\n\n    <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n      {onError}\n    </p>\n  );\n};\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\n\ninterface UserLinkProps {\n  title: string;\n  path: string;\n  sex: string;\n}\n\nconst FEMALE = 'f';\n\nexport const UserLink: FC<UserLinkProps> = ({\n  title,\n  path,\n  sex,\n}) => {\n  return (\n    <Link\n      to={`../${path}`}\n      className={cn({\n        'has-text-danger': sex === FEMALE,\n      })}\n    >\n      {title}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { PersonType } from '../../types';\nimport { UserLink } from '../UserLink';\n\ninterface PersonProps {\n  person: PersonType;\n  mom: PersonType | null;\n  dad: PersonType | null\n}\n\nexport const Person: FC<PersonProps> = ({\n  person,\n  mom,\n  dad,\n}) => {\n  const {\n    slug,\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n  } = person;\n\n  const { slug: userId = '' } = useParams();\n  const isSelected = slug === userId;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': isSelected,\n      })}\n    >\n      <td>\n        <UserLink\n          title={name}\n          sex={sex}\n          path={slug}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mom\n          ? (\n            <UserLink\n              title={mom.name}\n              path={mom.slug}\n              sex={mom.sex}\n            />\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {dad\n          ? (\n            <UserLink\n              path={dad.slug}\n              sex={dad.sex}\n              title={dad.name}\n            />\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { FC } from 'react';\nimport { Person } from '../Person';\nimport { PersonType } from '../../types';\n\ninterface PeopleTableProps {\n  people: PersonType[];\n}\n\nexport const PeopleTable: FC<PeopleTableProps> = ({\n  people,\n}) => {\n  const findParent = (\n    data: PersonType[],\n    parentName: string | null,\n  ): PersonType | null => {\n    return data.find(person => person.name === parentName) || null;\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const { slug } = person;\n          const mom = findParent(people, person.motherName);\n          const dad = findParent(people, person.fatherName);\n\n          return (\n            <Person\n              key={slug}\n              person={person}\n              mom={mom}\n              dad={dad}\n            />\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { FC, useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { ErrorType, PersonType } from '../../types';\nimport { getPeople } from '../../api';\nimport { ErrorNotification } from '../../components/ErrorNotification';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<PersonType[]>([]);\n  const [error, setError] = useState(ErrorType.None);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const fetchPeoples = async () => {\n    setIsLoading(true);\n\n    try {\n      const getPeopleList = await getPeople();\n\n      setPeople(getPeopleList);\n    } catch {\n      setError(ErrorType.WentWrong);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchPeoples();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {error && (\n                  <ErrorNotification\n                    onError={error}\n                    onChangeError={setError}\n                  />\n                )}\n\n                {people.length === 0 && (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                )}\n\n                <PeopleTable people={people} />\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { FC } from 'react';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { FC } from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { HomePage } from '../pages/HomePage';\nimport { PeoplePage } from '../pages/PeoplePage';\nimport { NotFoundPage } from '../pages/NotFoundPage';\nimport { PATH } from '../types';\n\nexport const MainRoutes: FC = () => {\n  return (\n    <Routes>\n      <Route path={PATH.Main} element={<HomePage />} />\n      <Route path={PATH.Home} element={<Navigate to={PATH.Main} replace />} />\n\n      <Route path={PATH.People}>\n        <Route index element={<PeoplePage />} />\n        <Route path={PATH.USER_ID} element={<PeoplePage />} />\n      </Route>\n\n      <Route path={PATH.Error} element={<NotFoundPage />} />\n    </Routes>\n  );\n};\n","import './App.scss';\n\nimport { Navbar } from './components/Navbar';\nimport { MainRoutes } from './Routes';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <MainRoutes />\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}